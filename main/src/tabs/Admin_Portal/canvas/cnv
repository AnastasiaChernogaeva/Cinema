<template>
//     <canvas id="canvas" width='200' height='100'>
//         Обновите браузер
//     </canvas>
// </template>

// <script>
// import {ref, computed} from 'vue'
// export default {
//     // props:[
//     //     rows,
//     // ],
//     setup(){
//         const rows = ref(9)
//         const cvs=ref()

//         const context = computed(()=>document.querySelector('#canvas').getContext('2d')) 
//         context.beginPath
//         context.fillStyle='transparent';
//         context.fillRect(0,0,cvs.width,cvs.height); 
//         context.strokeStyle='blue';
//         context.fillStyle='rgb(255,0,0)';
//         context.strokeRect(1,1, 40,40);
//         context.fillRect(50,1, 40,40);
//         return{
//             rows
//         }
//     }

// }
// </script>

// <style>

// </style>

<template>
    <div class="app-wrapper" >
        <canvas id="canvas"
            @mouseup="finishedPosition()"
            @mousedown="startPosition()"
            @mousemove="draw($event)"
        ></canvas>
    </div>
</template>

<script>
export default {
    data() {
        return {
            painting:false
        }
    },
    methods: {
        startPosition(){
            this.painting=true;
        },
        finishedPosition(){
            this.painting=false;
            this.ctx.beginPath();
        },
        draw(event){
            if(this.painting){
                canvas.height=300;
                canvas.width=document.querySelector('.app-wrapper').clientWidth;
                this.ctx.lineWidth=5;
                this.ctx.lineCap='round';

                this.ctx.lineTo(event.clientX, event.clientY);
                this.ctx.stroke();
                this.ctx.beginPath();
                this.ctx.moveTo(event.clientX, event.clientY);
                this.ctx.fill()
            }
        }
    },
    computed: {
        ctx(){
            return document.querySelector('#canvas').getContext('2d');
        }
    },

}

</script>

<style scoped>
    .app-wrapper {
        min-height: 300px;
        max-width: 95%;
        background: beige;
    }
</style>